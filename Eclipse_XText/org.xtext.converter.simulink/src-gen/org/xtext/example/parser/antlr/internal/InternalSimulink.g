/*
 * generated by Xtext 2.13.0
 */
grammar InternalSimulink;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.services.SimulinkGrammarAccess;

}

@parser::members {

 	private SimulinkGrammarAccess grammarAccess;

    public InternalSimulinkParser(TokenStream input, SimulinkGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Root";
   	}

   	@Override
   	protected SimulinkGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	iv_ruleRoot=ruleRoot
	{ $current=$iv_ruleRoot.current; }
	EOF;

// Rule Root
ruleRoot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRootAccess().getRootElementSubElementParserRuleCall_0());
			}
			lv_rootElement_0_0=ruleSubElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRootRule());
				}
				add(
					$current,
					"rootElement",
					lv_rootElement_0_0,
					"org.xtext.example.Simulink.SubElement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleSubElement
entryRuleSubElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubElementRule()); }
	iv_ruleSubElement=ruleSubElement
	{ $current=$iv_ruleSubElement.current; }
	EOF;

// Rule SubElement
ruleSubElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSubElementAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.Simulink.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubElementAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubElementAccess().getElementElementParserRuleCall_2_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubElementRule());
					}
					add(
						$current,
						"element",
						lv_element_2_0,
						"org.xtext.example.Simulink.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getSubElementAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getSubElementParserRuleCall_0());
		}
		this_SubElement_0=ruleSubElement
		{
			$current = $this_SubElement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getBaseElementParserRuleCall_1());
		}
		this_BaseElement_1=ruleBaseElement
		{
			$current = $this_BaseElement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getVectorElementParserRuleCall_2());
		}
		this_VectorElement_2=ruleVectorElement
		{
			$current = $this_VectorElement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getMatrixElementParserRuleCall_3());
		}
		this_MatrixElement_3=ruleMatrixElement
		{
			$current = $this_MatrixElement_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getStringElementParserRuleCall_4());
		}
		this_StringElement_4=ruleStringElement
		{
			$current = $this_StringElement_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBaseElement
entryRuleBaseElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseElementRule()); }
	iv_ruleBaseElement=ruleBaseElement
	{ $current=$iv_ruleBaseElement.current; }
	EOF;

// Rule BaseElement
ruleBaseElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBaseElementAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBaseElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.Simulink.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBaseElementAccess().getValueBaseValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleBaseValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBaseElementRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.xtext.example.Simulink.BaseValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVectorElement
entryRuleVectorElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVectorElementRule()); }
	iv_ruleVectorElement=ruleVectorElement
	{ $current=$iv_ruleVectorElement.current; }
	EOF;

// Rule VectorElement
ruleVectorElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getVectorElementAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVectorElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.Simulink.ID");
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getVectorElementAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVectorElementAccess().getValueBaseValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleBaseValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVectorElementRule());
					}
					add(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.Simulink.BaseValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getVectorElementAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVectorElementAccess().getValueBaseValueParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleBaseValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVectorElementRule());
						}
						add(
							$current,
							"value",
							lv_value_4_0,
							"org.xtext.example.Simulink.BaseValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getVectorElementAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMatrixElement
entryRuleMatrixElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMatrixElementRule()); }
	iv_ruleMatrixElement=ruleMatrixElement
	{ $current=$iv_ruleMatrixElement.current; }
	EOF;

// Rule MatrixElement
ruleMatrixElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMatrixElementAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMatrixElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.Simulink.ID");
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getMatrixElementAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMatrixElementAccess().getValueBaseValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleBaseValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMatrixElementRule());
					}
					add(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.Simulink.BaseValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getMatrixElementAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatrixElementAccess().getValueBaseValueParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleBaseValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatrixElementRule());
						}
						add(
							$current,
							"value",
							lv_value_4_0,
							"org.xtext.example.Simulink.BaseValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getMatrixElementAccess().getSemicolonKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatrixElementAccess().getValueBaseValueParserRuleCall_4_1_0());
					}
					lv_value_6_0=ruleBaseValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatrixElementRule());
						}
						add(
							$current,
							"value",
							lv_value_6_0,
							"org.xtext.example.Simulink.BaseValue");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getMatrixElementAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMatrixElementAccess().getValueBaseValueParserRuleCall_4_2_1_0());
						}
						lv_value_8_0=ruleBaseValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMatrixElementRule());
							}
							add(
								$current,
								"value",
								lv_value_8_0,
								"org.xtext.example.Simulink.BaseValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)+
		otherlv_9=']'
		{
			newLeafNode(otherlv_9, grammarAccess.getMatrixElementAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleStringElement
entryRuleStringElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringElementRule()); }
	iv_ruleStringElement=ruleStringElement
	{ $current=$iv_ruleStringElement.current; }
	EOF;

// Rule StringElement
ruleStringElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getStringElementAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.Simulink.ID");
				}
			)
		)
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getStringElementAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringElementRule());
					}
					addWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getStringElementAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringElementRule());
					}
					addWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)*
	)
;

// Entry rule entryRuleBaseValue
entryRuleBaseValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBaseValueRule()); }
	iv_ruleBaseValue=ruleBaseValue
	{ $current=$iv_ruleBaseValue.current.getText(); }
	EOF;

// Rule BaseValue
ruleBaseValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBaseValueAccess().getFloatValueParserRuleCall_0());
		}
		this_FloatValue_0=ruleFloatValue
		{
			$current.merge(this_FloatValue_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseValueAccess().getFloatExpValueParserRuleCall_1());
		}
		this_FloatExpValue_1=ruleFloatExpValue
		{
			$current.merge(this_FloatExpValue_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseValueAccess().getIntValueParserRuleCall_2());
		}
		this_IntValue_2=ruleIntValue
		{
			$current.merge(this_IntValue_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseValueAccess().getIdValueParserRuleCall_3());
		}
		this_IdValue_3=ruleIdValue
		{
			$current.merge(this_IdValue_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFloatValue
entryRuleFloatValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatValueRule()); }
	iv_ruleFloatValue=ruleFloatValue
	{ $current=$iv_ruleFloatValue.current.getText(); }
	EOF;

// Rule FloatValue
ruleFloatValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_FLOAT_0=RULE_FLOAT
	{
		$current.merge(this_FLOAT_0);
	}
	{
		newLeafNode(this_FLOAT_0, grammarAccess.getFloatValueAccess().getFLOATTerminalRuleCall());
	}
;

// Entry rule entryRuleFloatExpValue
entryRuleFloatExpValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatExpValueRule()); }
	iv_ruleFloatExpValue=ruleFloatExpValue
	{ $current=$iv_ruleFloatExpValue.current.getText(); }
	EOF;

// Rule FloatExpValue
ruleFloatExpValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_FLOAT_X_0=RULE_FLOAT_X
	{
		$current.merge(this_FLOAT_X_0);
	}
	{
		newLeafNode(this_FLOAT_X_0, grammarAccess.getFloatExpValueAccess().getFLOAT_XTerminalRuleCall());
	}
;

// Entry rule entryRuleIntValue
entryRuleIntValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntValueRule()); }
	iv_ruleIntValue=ruleIntValue
	{ $current=$iv_ruleIntValue.current.getText(); }
	EOF;

// Rule IntValue
ruleIntValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_X_0=RULE_INT_X
	{
		$current.merge(this_INT_X_0);
	}
	{
		newLeafNode(this_INT_X_0, grammarAccess.getIntValueAccess().getINT_XTerminalRuleCall());
	}
;

// Entry rule entryRuleIdValue
entryRuleIdValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdValueRule()); }
	iv_ruleIdValue=ruleIdValue
	{ $current=$iv_ruleIdValue.current.getText(); }
	EOF;

// Rule IdValue
ruleIdValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getIdValueAccess().getIDTerminalRuleCall());
	}
;

RULE_FLOAT : '-'? RULE_INT '.' RULE_INT;

RULE_FLOAT_X : '-'? RULE_INT 'e-' RULE_INT;

RULE_INT_X : '-'? RULE_INT;

RULE_ID : '$'? '^'? ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')+ ('.' ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')+)?;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
