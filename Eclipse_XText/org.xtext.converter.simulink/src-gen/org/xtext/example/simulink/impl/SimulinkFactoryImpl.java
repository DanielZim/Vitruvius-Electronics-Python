/**
 * generated by Xtext 2.13.0
 */
package org.xtext.example.simulink.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.simulink.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SimulinkFactoryImpl extends EFactoryImpl implements SimulinkFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SimulinkFactory init()
  {
    try
    {
      SimulinkFactory theSimulinkFactory = (SimulinkFactory)EPackage.Registry.INSTANCE.getEFactory(SimulinkPackage.eNS_URI);
      if (theSimulinkFactory != null)
      {
        return theSimulinkFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SimulinkFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimulinkFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SimulinkPackage.ROOT: return createRoot();
      case SimulinkPackage.SUB_ELEMENT: return createSubElement();
      case SimulinkPackage.ELEMENT: return createElement();
      case SimulinkPackage.BASE_ELEMENT: return createBaseElement();
      case SimulinkPackage.VECTOR_ELEMENT: return createVectorElement();
      case SimulinkPackage.MATRIX_ELEMENT: return createMatrixElement();
      case SimulinkPackage.STRING_ELEMENT: return createStringElement();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Root createRoot()
  {
    RootImpl root = new RootImpl();
    return root;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SubElement createSubElement()
  {
    SubElementImpl subElement = new SubElementImpl();
    return subElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Element createElement()
  {
    ElementImpl element = new ElementImpl();
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BaseElement createBaseElement()
  {
    BaseElementImpl baseElement = new BaseElementImpl();
    return baseElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VectorElement createVectorElement()
  {
    VectorElementImpl vectorElement = new VectorElementImpl();
    return vectorElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MatrixElement createMatrixElement()
  {
    MatrixElementImpl matrixElement = new MatrixElementImpl();
    return matrixElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringElement createStringElement()
  {
    StringElementImpl stringElement = new StringElementImpl();
    return stringElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimulinkPackage getSimulinkPackage()
  {
    return (SimulinkPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SimulinkPackage getPackage()
  {
    return SimulinkPackage.eINSTANCE;
  }

} //SimulinkFactoryImpl
